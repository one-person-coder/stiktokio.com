---
import Link from '@components/ui/link.astro';
import CSS from '@public/index.css';
const { heading, subheading } = Astro.props;

---

<div class="relative isolate px-6 pt-10 lg:px-8 pb-28 bg-orange-500">
    <div class="absolute inset-x-0 -top-40 -z-10 transform-gpu overflow-hidden blur-3xl sm:-top-80" aria-hidden="true"></div>
    <div class="mx-auto max-w-screen-xl another">
       
        <div class="text-center">
            <h1 class="text-4xl font-bold tracking-tight text-white">{heading}</h1>
            <p class="mt-2 text-lg leading-8 text-gray-300">{subheading}</p>
        </div>

        <div class="tab-menu">
            <button class="tablinks active" onclick="if (!window.__cfRLUnblockHandlers) return false; click_tab(event,&quot;video&quot;)">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M9 22H15C20 22 22 20 22 15V9C22 4 20 2 15 2H9C4 2 2 4 2 9V15C2 20 4 22 9 22Z" stroke="#ffffff" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                <path d="M9.1001 12V10.52C9.1001 8.60999 10.4501 7.83999 12.1001 8.78999L13.3801 9.52999L14.6601 10.27C16.3101 11.22 16.3101 12.78 14.6601 13.73L13.3801 14.47L12.1001 15.21C10.4501 16.16 9.1001 15.38 9.1001 13.48V12Z" stroke="#ffffff" stroke-width="1.5" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
                </svg>
            <span>Video</span></button> 
            
            <button class="tablinks" onclick="if (!window.__cfRLUnblockHandlers) return false; click_tab(event,&quot;photo&quot;)">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g>
                <path id="Vector" d="M3.00005 18.0001C3 17.9355 3 17.8689 3 17.8002V6.2002C3 5.08009 3 4.51962 3.21799 4.0918C3.40973 3.71547 3.71547 3.40973 4.0918 3.21799C4.51962 3 5.08009 3 6.2002 3H17.8002C18.9203 3 19.4801 3 19.9079 3.21799C20.2842 3.40973 20.5905 3.71547 20.7822 4.0918C21 4.5192 21 5.07899 21 6.19691V17.8031C21 18.2881 21 18.6679 20.9822 18.9774M3.00005 18.0001C3.00082 18.9884 3.01337 19.5058 3.21799 19.9074C3.40973 20.2837 3.71547 20.5905 4.0918 20.7822C4.5192 21 5.07899 21 6.19691 21H17.8036C18.9215 21 19.4805 21 19.9079 20.7822C20.2842 20.5905 20.5905 20.2837 20.7822 19.9074C20.9055 19.6654 20.959 19.3813 20.9822 18.9774M3.00005 18.0001L7.76798 12.4375L7.76939 12.436C8.19227 11.9426 8.40406 11.6955 8.65527 11.6064C8.87594 11.5282 9.11686 11.53 9.33643 11.6113C9.58664 11.704 9.79506 11.9539 10.2119 12.4541L12.8831 15.6595C13.269 16.1226 13.463 16.3554 13.6986 16.4489C13.9065 16.5313 14.1357 16.5406 14.3501 16.4773C14.5942 16.4053 14.8091 16.1904 15.2388 15.7607L15.7358 15.2637C16.1733 14.8262 16.3921 14.6076 16.6397 14.5361C16.8571 14.4734 17.0896 14.4869 17.2988 14.5732C17.537 14.6716 17.7302 14.9124 18.1167 15.3955L20.9822 18.9774M20.9822 18.9774L21 18.9996M15 9C14.4477 9 14 8.55228 14 8C14 7.44772 14.4477 7 15 7C15.5523 7 16 7.44772 16 8C16 8.55228 15.5523 9 15 9Z" stroke="#fff" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></g>
                </svg>
            <span>Photo</span></button> 

            <button class="tablinks" onclick="if (!window.__cfRLUnblockHandlers) return false; click_tab(event,&quot;reels&quot;)">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M22 15V9C22 4 20 2 15 2H9C4 2 2 4 2 9V15C2 20 4 22 9 22H15C20 22 22 20 22 15Z" stroke="#ffffff" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                <path d="M2.52002 7.11011H21.48" stroke="#ffffff" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                <path d="M8.52002 2.11011V6.97011" stroke="#ffffff" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                <path d="M15.48 2.11011V6.52011" stroke="#ffffff" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                <path d="M9.75 14.4501V13.2501C9.75 11.7101 10.84 11.0801 12.17 11.8501L13.21 12.4501L14.25 13.0501C15.58 13.8201 15.58 15.0801 14.25 15.8501L13.21 16.4501L12.17 17.0501C10.84 17.8201 9.75 17.1901 9.75 15.6501V14.4501V14.4501Z" stroke="#ffffff" stroke-width="1.5" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
                </svg>
            <span>Reels</span></button> 
            
            <button class="tablinks" onclick="if (!window.__cfRLUnblockHandlers) return false; click_tab(event,&quot;stories&quot;)">
                <svg enable-background="new 0 0 32 32" height="24" viewBox="0 0 32 32" width="24" fill="#ffffff" xmlns="http://www.w3.org/2000/svg"><g>
                <path d="m9.1502 25.97228c-1.29851-.89403-2.39526-2.01392-3.26093-3.32898-.43993-.66863-1.34057-.85575-2.01062-.41441-.66958.44087-.85528 1.34104-.41441 2.01062 1.07217 1.62928 2.43164 3.01663 4.03966 4.12377.25139.17342.53821.25611.82173.25611.46166 0 .91529-.21973 1.19692-.62847.45458-.66012.28825-1.56407-.37235-2.01864z"></path>
                <path d="m3.87298 9.78056c.24572.16161.52215.23863.79574.23863.47253 0 .93561-.23012 1.2144-.65446.86521-1.31647 1.96148-2.43731 3.25858-3.33134.65965-.45505.82598-1.359.37094-2.01912-.45552-.6606-1.35852-.82598-2.01912-.37094-1.6066 1.10761-2.96465 2.49638-4.03635 4.12708-.44041.67005-.25423 1.57022.41581 2.01015z"></path>
                <path d="m4.12862 18.33525c-.14932-.7622-.22492-1.54849-.22539-2.33525 0-.78109.07513-1.5636.22303-2.32485.15263-.78724-.36149-1.54895-1.14825-1.70205-.79149-.15121-1.5499.36149-1.70205 1.14825-.18287.94364-.27596 1.91233-.27596 2.87959.00047.97341.09451 1.94635.27927 2.89189.13562.69273.74282 1.17329 1.42326 1.17329.09214 0 .18618-.00898.28021-.02741.78676-.15404 1.29946-.91623 1.14588-1.70346z"></path>
                <path d="m16 1c-1.07453 0-2.14812.11435-3.19147.34069-.78345.16964-1.2815.94223-1.11139 1.72568.14696.67997.74849 1.14494 1.41712 1.14494.10159 0 .20508-.01087.30856-.03355.84205-.18192 1.70867-.27453 2.57718-.27453 6.67024 0 12.09678 5.42654 12.09678 12.09677s-5.42654 12.09678-12.09678 12.09678c-.86851 0-1.73513-.09262-2.57718-.27454-.78535-.17058-1.55651.32794-1.72568 1.11139-.17011.78345.32794 1.55604 1.11139 1.72568 1.04335.22634 2.11694.34069 3.19147.34069 8.27117 0 15-6.72883 15-15s-6.72883-15-15-15z"></path>
                <path d="m12.20558 22.57195c.22445.12995.47536.19468.72581.19468.25044 0 .50135-.06474.72581-.19468l9.20583-5.31502c.4489-.25895.72581-.73809.72581-1.25693s-.2769-.99798-.72581-1.25693l-9.20583-5.31502c-.4489-.25989-1.00271-.25989-1.45161 0-.4489.25895-.72581.73809-.72581 1.25693v10.63004c0 .51884.2769.99798.7258 1.25693zm2.17742-9.37264 4.851 2.80069-4.851 2.80069z"></path></g>
                </svg>
            <span>Stories</span></button> 
            
            
        </div>


        <div class="flex items-center justify-center mt-5 space-x-2 flex-wrap">


 <Link
                href="/"
                class="flex items-center px-4 py-2 bg-white-800 text-black font-semibold rounded-s shadow-md transition-colors duration-300 ease-in-out hover:bg-gray-200 active:bg-gray-200 my-1"
            >
                <span class="ml-1">TikTok Video</span>
            </Link>
            <Link
                href="/tiktok-sound-downloader"
                class="flex items-center px-8 py-2 bg-white bg-opacity-70 text-black font-semibold rounded-s shadow-md transition-colors duration-300 ease-in-out hover:bg-gray-100 hover:bg-opacity-80 active:bg-gray-200 my-1"
            >
                <span class="ml-1">MP3</span>
            </Link>
            <Link
                href="/tiktok-slideshow-downloader"
                class="flex items-center px-8 py-2 bg-white bg-opacity-70 text-black font-semibold rounded-s shadow-md transition-colors duration-300 ease-in-out hover:bg-gray-100 hover:bg-opacity-80 active:bg-gray-200 my-1"
            >
                <span class="ml-1">Photo</span>
            </Link>
            <Link
                href="/tiktok-story-downloader"
                class="flex items-center px-8 py-2 bg-white bg-opacity-70 text-black font-semibold rounded-s shadow-md transition-colors duration-300 ease-in-out hover:bg-gray-100 hover:bg-opacity-80 active:bg-gray-200 my-1"
            >
                <span class="ml-1">Story</span>
            </Link>
           
        </div>


        <div class="relative max-w-xl mx-auto mt-8">
            <form class="block items-center sm:space-x-4 sm:flex sub-form">
                <div class="relative flex-1">
                    <input
                        type="text"
                        placeholder="Paste your link here..."
                        class="w-full pr-12 pl-4 py-3 outline-none rounded-lg text-black placeholder-gray-500 transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-blue-600 focus:border-transparent down-url"
                        style="box-shadow: 0 0 2px rgb(255, 255, 255) !important;"
                    />
                </div>
                <button
                    class="px-6 py-3 bg-gradient-to-r from-indigo-500 to-indigo-600 text-white font-semibold rounded-lg shadow-lg transition-all duration-300 hover:from-indigo-600 hover:to-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 outline-none
                    mt-2 sm:mt-0 w-full sm:w-auto send-btn cursor-pointer"
                    type="submit"
                >
                    Download
                </button>
            </form>
        </div>


    </div>
</div>

<div class="loader items-center justify-center hidden">
    <img src="/src/icons/loader.webp" alt="" />
</div>

<div class="bg-orange-500 py-16 px-4 sm:px-6 lg:px-8 main-div hidden">
    <div class="max-w-7xl mx-auto">
        <h2></h2>
        <h2 class="text-2xl font-extrabold text-center mb-4 shadow-text msg break-all"></h2>
        <div class="flex flex-wrap justify-center gap-8">
            <div class="gap-8 down-div grid lg:grid-cols-2 md:grid-cols-2 grid-cols-1"></div>
        </div>

    </div>
</div>

<style>
    .shadow-text {
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
    }
    .flex {
        align-items: flex-start;
    }
</style>

<script type="module">
    import h from '/src/assets/js/s.js';

    let submitForm;
    let mainDiv;
    let downDiv;
    let message;
    let loader;
    let e, s, r;
    const baseURL = 'https://download.stiktokio.com';
    const errorClass = 'text-red-600';
    const simpleClass = 'text-white';
    const imageClass = 'w-full h-full object-cover rounded-lg mb-6';
    const h3Class = 'text-2xl font-semibold text-white text-center mb-4';
    const anchorClass =
        'block w-full bg-gradient-to-r from-pink-500 to-red-500 text-white font-bold py-3 px-4 rounded-lg text-center transition-all duration-300 hover:from-pink-600 hover:to-red-600 hover:shadow-lg';

    function init() {
        // DOM elements ko dobara select karna
        submitForm = document.querySelector('.sub-form');
        mainDiv = document.querySelector('.main-div');
        downDiv = document.querySelector('.down-div');
        message = document.querySelector('.msg');
        loader = document.querySelector('.loader');

        // Submit event listener lagana
        submitForm.addEventListener('submit', dt);

        // Initial data fetch karna
        SendFirstRequestToServer();
    }

    function addPosition(data) {
        e = data.layout;
        s = data.cards;
        r = data.cards_position;
    }

    function showLoader() {
        if (loader.classList.contains('hidden')) {
            loader.classList.remove('hidden');
            loader.classList.add('flex');
        } else {
            loader.classList.add('flex');
        }
    }

    function hideLoader() {
        if (loader.classList.contains('flex')) {
            loader.classList.remove('flex');
            loader.classList.add('hidden');
        } else {
            loader.classList.add('hidden');
        }
    }

    function SendFirstRequestToServer() {
        fetch(`${baseURL}/position`, {
            method: 'get',
        })
            .then((response) => response.json())
            .then((res) => {
                addPosition(res);
            })
            .catch((err) => {
                showError(err);
            });
    }

    function showError(errorMsg) {
        if (mainDiv.classList.contains('hidden')) {
            mainDiv.classList.add('flex');
            mainDiv.classList.remove('hidden');
        }
        if (message.classList.contains(simpleClass)) {
            message.classList.remove(simpleClass);
            message.classList.add(errorClass);
        } else {
            message.classList.add(errorClass);
        }
        message.textContent = errorMsg;
    }

    function dc() {
        if (e && s && r) {
            const dc = h(e, r, s);
            if (dc) {
                return dc;
            } else {
                showError('Please reload page and try again later.');
                return false;
            }
        } else {
            showError('Please wait a few seconds.');
            return false;
        }
    }

    function showDataOnPage(data) {
        if (data.thumbnail) {
            showVideoDataOnPage(data);
        } else {
            showImageDataOnPage(data);
        }
    }

    function scrollToElement(className) {
        var element = document.querySelector(`.${className}`);
        if (element) {
            element.scrollIntoView({ behavior: 'smooth', block: 'end' });
        } else {
            console.log('Element not found');
        }
    }

    function deleteAllDownloadDivs() {
        let ddDivs = document.querySelectorAll('.ddDiv');

        if (ddDivs.length >= 1) {
            ddDivs = Array.from(ddDivs);
            for (const element of ddDivs) {
                element.remove();
            }
        }

        if (!mainDiv.classList.contains('hidden')) {
            mainDiv.classList.add('hidden');
            mainDiv.classList.remove('flex');
        }
        message.textContent = '';
    }

    function showImageDataOnPage(data) {
        mainDiv.classList.remove('hidden');
        message.classList.add(simpleClass);

        data.formats.forEach((format) => {
            if (format.type === 'image') {
                const dnDiv = document.createElement('div');
                dnDiv.className = 'bg-gray-800 rounded-xl shadow-2xl overflow-hidden transform transition-all duration-300 w-full ddDiv';

                const dnButtonDiv = document.createElement('div');
                const dnButton = document.createElement('a');
                dnButton.className =
                    'block w-full bg-gradient-to-r from-pink-500 to-purple-500 text-white font-bold py-3 px-4 rounded-lg text-center transition-colors duration-300 hover:opacity-90 my-3';

                const img = document.createElement('img');
                img.className = 'h-auto object-cover rounded-lg mb-6 w-full max-h-[400px]';
                img.alt = data.title;
                img.src = format.imgURL;

                dnButton.innerText = 'Download Photo';
                dnButton.href = `${baseURL}${format.link}`;
                dnButton.target = '_blank';

                dnDiv.appendChild(img);
                dnButtonDiv.append(dnButton);
                dnDiv.append(dnButtonDiv);
                downDiv.appendChild(dnDiv);
            } else if (format.type == 'audio') {
                const dnDiv = document.createElement('div');
                dnDiv.className = `bg-gray-800 rounded-xl shadow-2xl overflow-hidden transform transition-all duration-300 w-full ddDiv block order-2 lg:col-span-${data.formats.length - 1} md:col-span-2 col-span-1`;

                const dnButton = document.createElement('a');
                dnButton.className =
                    'block w-full bg-gradient-to-r from-pink-500 to-purple-500 text-white font-bold py-3 px-4 rounded-lg text-center transition-colors duration-300 hover:opacity-90 my-3';

                dnButton.innerText = 'Download MP3';
                dnButton.href = `${baseURL}${format.link}`;
                dnButton.target = '_blank';

                dnDiv.append(dnButton);
                downDiv.appendChild(dnDiv);

                const anotherButton = document.createElement('button');
                anotherButton.className =
                    'block w-full bg-gradient-to-r from-pink-500 to-purple-500 text-white font-bold py-3 px-4 rounded-lg text-center transition-colors duration-300 hover:opacity-90 my-3';
                anotherButton.textContent = 'Download Another';
                anotherButton.addEventListener('click', () => {
                    document.querySelector('.another').scrollIntoView({ behavior: 'smooth' });
                });

                dnDiv.appendChild(anotherButton);
            }
        });
    }

    function showVideoDataOnPage(data) {
        const dnDiv = document.createElement('div');
        const dnButtonDiv = document.createElement('div');
        const thumbnail = document.createElement('img');
        dnDiv.className = 'bg-gray-800 rounded-xl shadow-2xl overflow-hidden transform transition-all duration-300 w-full w-96 md:w-[650px] md:flex p-4 ddDiv gap-5 col-span-2';
        thumbnail.className = 'block mb-6 md:mb-0 rounded-lg md:w-[50%] md:h-[345px]';

        if (mainDiv.classList.contains('hidden')) {
            mainDiv.classList.remove('hidden');
            mainDiv.classList.add('flex');
        } else {
            mainDiv.classList.add('flex');
        }
        if (!message.classList.contains(simpleClass)) {
            message.classList.add(simpleClass);
        }
        message.textContent = data.title;
        thumbnail.alt = data.title;
        thumbnail.src = data.thumbnail;

        downDiv.appendChild(dnDiv);
        dnDiv.appendChild(thumbnail);
        dnDiv.appendChild(dnButtonDiv);

        for (let format of data.formats) {
            const dnButton = document.createElement('a');
            dnButton.className = 'block w-full bg-gradient-to-r from-pink-500 to-purple-500 text-white font-bold py-3 px-4 rounded-lg text-center transition-colors duration-300 hover:opacity-90 my-3';

            if (!format.hd && !format.watermark && format.type === 'video') {
                dnButton.innerText = 'Download without watermark';
                dnButton.href = `${baseURL}${format.link}`;
                dnButtonDiv.append(dnButton);
                dnButton.target = '_blank';
            } else if (format.hd && !format.watermark && format.type === 'video') {
                dnButton.innerText = 'Download without watermark (HD)';
                dnButton.href = `${baseURL}${format.link}`;
                dnButtonDiv.append(dnButton);
                dnButton.target = '_blank';
            } else if (format.hd && format.watermark && format.type === 'video') {
                dnButton.innerText = 'Download watermark';
                dnButton.href = `${baseURL}${format.link}`;
                dnButtonDiv.append(dnButton);
                dnButton.target = '_blank';
            } else if (!format.hd && !format.watermark && format.type === 'audio') {
                dnButton.innerText = 'Download MP3';
                dnButton.href = `${baseURL}${format.link}`;
                dnButtonDiv.append(dnButton);
                dnButton.target = '_blank';
            }
        }
        const anotherButton = document.createElement('button');
        anotherButton.className =
            'block w-full bg-gradient-to-r from-pink-500 to-purple-500 text-white font-bold py-3 px-4 rounded-lg text-center transition-colors duration-300 hover:opacity-90 my-3';
        anotherButton.textContent = 'Download Another';
        anotherButton.addEventListener('click', () => {
            document.querySelector('.another').scrollIntoView({ behavior: 'smooth' });
        });

        dnButtonDiv.appendChild(anotherButton);

        scrollToElement('main-div');
    }

    function dt(e) {
        e.preventDefault();
        const url = document.querySelector('.down-url').value;

        const enc = dc();
        if (!enc) {
            scrollToElement('main-div');
            return;
        }

        deleteAllDownloadDivs();
        showLoader();

        fetch(`${baseURL}/download`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'x-auth-token': enc,
            },
            body: JSON.stringify({ url: url }),
        })
            .then((res) => res.json())
            .then((response) => {
                if (response.error && response.ex) {
                    window.location.reload();
                }
                if (response.error) {
                    showError(response.msg);
                }
                if (!response.error) {
                    showDataOnPage(response);
                    scrollToElement('main-div');
                }
            })
            .catch((err) => {
                showError(err);
            })
            .finally(() => {
                hideLoader();
            });
    }

    // Clean-up function
    function cleanup() {
        if (submitForm) {
            submitForm.removeEventListener('submit', dt);
        }
    }

    // Initialize on first load
    document.addEventListener('DOMContentLoaded', init);

    // Cleanup before Astro page swap
    document.addEventListener(
        'astro:before-swap',
        () => {
            cleanup();
        },
        { once: true }
    );

    // Re-initialize after swapping pages
    document.addEventListener('astro:after-swap', init);
</script>
